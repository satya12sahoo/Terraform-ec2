# Example terraform.tfvars for EC2 Monitoring Module
# Copy this file to terraform.tfvars and customize as needed

# =============================================================================
# REQUIRED VARIABLES (must be provided)
# =============================================================================

# VPC ID where the EC2 instance will be created
vpc_id = "vpc-12345678"

# =============================================================================
# OPTIONAL VARIABLES (have sensible defaults)
# =============================================================================

# AWS region for all resources
aws_region = "us-west-2"

# EC2 Instance Configuration
instance_name = "my-monitoring-server"
instance_type = "t3.micro"
ami_id        = "ami-0c55b159cbfafe1f0"  # Amazon Linux 2 in us-west-2

# Environment and Project Tags
environment = "production"
project     = "monitoring"

# Network Configuration
allowed_cidr_blocks = [
  "10.0.0.0/8",      # VPC CIDR
  "172.16.0.0/12",   # Additional private networks
  "192.168.0.0/16"   # Additional private networks
]

# =============================================================================
# MONITORING CONFIGURATION (optional overrides)
# =============================================================================

# CloudWatch Agent Configuration
# Uncomment and customize if you want to override the default configuration
# cloudwatch_agent_config = jsonencode({
#   "agent": {
#     "metrics_collection_interval": 30,
#     "run_as_user": "root"
#   },
#   "logs": {
#     "logs_collected": {
#       "files": {
#         "collect_list": [
#           {
#             "file_path": "/var/log/myapp.log",
#             "log_group_name": "/aws/ec2/myapp/logs",
#             "log_stream_name": "{instance_id}",
#             "timezone": "UTC"
#           }
#         ]
#       }
#     }
#   },
#   "metrics": {
#     "metrics_collected": {
#       "cpu": {
#         "measurement": ["cpu_usage_idle", "cpu_usage_user"],
#         "metrics_collection_interval": 30
#       },
#       "mem": {
#         "measurement": ["mem_used_percent"],
#         "metrics_collection_interval": 30
#       }
#     }
#   }
# })

# =============================================================================
# ALARM CONFIGURATION (optional overrides)
# =============================================================================

# CPU utilization threshold for alarm (percentage)
cpu_alarm_threshold = 85

# Memory utilization threshold for alarm (percentage)
memory_alarm_threshold = 90

# Number of days to retain CloudWatch logs
log_retention_days = 90

# =============================================================================
# ADVANCED CONFIGURATION (optional overrides)
# =============================================================================

# Custom IAM Role Names (optional - will use defaults if not specified)
# iam_role_name = "MyCustomCloudWatchRole"
# iam_policy_name = "MyCustomCloudWatchPolicy"
# iam_instance_profile_name = "MyCustomCloudWatchProfile"

# Custom SSM Parameter Name (optional - will use default if not specified)
# ssm_parameter_name = "/myapp/cloudwatch/config"

# Custom Dashboard Name (optional - will use default if not specified)
# dashboard_name = "MyCustomDashboard"

# Custom Log Group Name (optional - will use default if not specified)
# log_group_name = "/aws/ec2/myapp/custom-logs"

# SNS Topic for Alarms (optional - uncomment and provide ARN)
# sns_topic_arn = "arn:aws:sns:us-west-2:123456789012:my-alerts-topic"

# =============================================================================
# RESOURCE CREATION FLAGS (optional - all default to true)
# =============================================================================

# Whether to create IAM role for CloudWatch agent
# create_iam_role = true

# Whether to create SSM parameter for CloudWatch agent configuration
# create_ssm_parameter = true

# Whether to create CloudWatch dashboard
# create_dashboard = true

# Whether to create CloudWatch log group
# create_log_group = true

# Whether to create CPU utilization alarm
# create_cpu_alarm = true

# Whether to create memory utilization alarm
# create_memory_alarm = true

# =============================================================================
# TAGS (optional - will be applied to all resources)
# =============================================================================

# Additional tags for all resources
# tags = {
#   Owner       = "devops-team"
#   CostCenter  = "monitoring"
#   Backup      = "true"
#   Compliance  = "SOC2"
# }